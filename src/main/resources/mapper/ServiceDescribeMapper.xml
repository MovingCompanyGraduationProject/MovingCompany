<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlbrc.movingcompany.mapper.IServiceDescribeMapper">
  <resultMap id="BaseResultMap" type="com.hlbrc.movingcompany.entity.ServiceDescribe">
    <id column="serviceDescribeId" jdbcType="INTEGER" property="servicedescribeid" />
    <result column="CompanyMessageId" jdbcType="INTEGER" property="companymessageid" />
    <result column="subtitle" jdbcType="VARCHAR" property="subtitle" />
    <result column="contextNum" jdbcType="VARCHAR" property="contextnum" />
    <result column="specialAnn" jdbcType="VARCHAR" property="specialann" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    serviceDescribeId, CompanyMessageId, subtitle, contextNum, specialAnn
  </sql>
  <select id="selectByExample" parameterType="com.hlbrc.movingcompany.entity.ServiceDescribeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from servicedescribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from servicedescribe
    where serviceDescribeId = #{servicedescribeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from servicedescribe
    where serviceDescribeId = #{servicedescribeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hlbrc.movingcompany.entity.ServiceDescribeExample">
    delete from servicedescribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hlbrc.movingcompany.entity.ServiceDescribe">
    insert into servicedescribe (serviceDescribeId, CompanyMessageId, 
      subtitle, contextNum, specialAnn
      )
    values (#{servicedescribeid,jdbcType=INTEGER}, #{companymessageid,jdbcType=INTEGER}, 
      #{subtitle,jdbcType=VARCHAR}, #{contextnum,jdbcType=VARCHAR}, #{specialann,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hlbrc.movingcompany.entity.ServiceDescribe">
    insert into servicedescribe
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="servicedescribeid != null">
        serviceDescribeId,
      </if>
      <if test="companymessageid != null">
        CompanyMessageId,
      </if>
      <if test="subtitle != null">
        subtitle,
      </if>
      <if test="contextnum != null">
        contextNum,
      </if>
      <if test="specialann != null">
        specialAnn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="servicedescribeid != null">
        #{servicedescribeid,jdbcType=INTEGER},
      </if>
      <if test="companymessageid != null">
        #{companymessageid,jdbcType=INTEGER},
      </if>
      <if test="subtitle != null">
        #{subtitle,jdbcType=VARCHAR},
      </if>
      <if test="contextnum != null">
        #{contextnum,jdbcType=VARCHAR},
      </if>
      <if test="specialann != null">
        #{specialann,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hlbrc.movingcompany.entity.ServiceDescribeExample" resultType="java.lang.Long">
    select count(*) from servicedescribe
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update servicedescribe
    <set>
      <if test="record.servicedescribeid != null">
        serviceDescribeId = #{record.servicedescribeid,jdbcType=INTEGER},
      </if>
      <if test="record.companymessageid != null">
        CompanyMessageId = #{record.companymessageid,jdbcType=INTEGER},
      </if>
      <if test="record.subtitle != null">
        subtitle = #{record.subtitle,jdbcType=VARCHAR},
      </if>
      <if test="record.contextnum != null">
        contextNum = #{record.contextnum,jdbcType=VARCHAR},
      </if>
      <if test="record.specialann != null">
        specialAnn = #{record.specialann,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update servicedescribe
    set serviceDescribeId = #{record.servicedescribeid,jdbcType=INTEGER},
      CompanyMessageId = #{record.companymessageid,jdbcType=INTEGER},
      subtitle = #{record.subtitle,jdbcType=VARCHAR},
      contextNum = #{record.contextnum,jdbcType=VARCHAR},
      specialAnn = #{record.specialann,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hlbrc.movingcompany.entity.ServiceDescribe">
    update servicedescribe
    <set>
      <if test="companymessageid != null">
        CompanyMessageId = #{companymessageid,jdbcType=INTEGER},
      </if>
      <if test="subtitle != null">
        subtitle = #{subtitle,jdbcType=VARCHAR},
      </if>
      <if test="contextnum != null">
        contextNum = #{contextnum,jdbcType=VARCHAR},
      </if>
      <if test="specialann != null">
        specialAnn = #{specialann,jdbcType=VARCHAR},
      </if>
    </set>
    where serviceDescribeId = #{servicedescribeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hlbrc.movingcompany.entity.ServiceDescribe">
    update servicedescribe
    set CompanyMessageId = #{companymessageid,jdbcType=INTEGER},
      subtitle = #{subtitle,jdbcType=VARCHAR},
      contextNum = #{contextnum,jdbcType=VARCHAR},
      specialAnn = #{specialann,jdbcType=VARCHAR}
    where serviceDescribeId = #{servicedescribeid,jdbcType=INTEGER}
  </update>
</mapper>