<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlbrc.movingcompany.mapper.ICompanyMessageMapper">
  <resultMap id="BaseResultMap" type="com.hlbrc.movingcompany.entity.CompanyMessage">
    <id column="CompanyMessageId" jdbcType="INTEGER" property="companymessageid" />
    <result column="dis_id" jdbcType="INTEGER" property="disId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="serviceContext" jdbcType="VARCHAR" property="servicecontext" />
    <result column="feature" jdbcType="VARCHAR" property="feature" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="promise" jdbcType="VARCHAR" property="promise" />
    <result column="linkman" jdbcType="VARCHAR" property="linkman" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="approveState" jdbcType="VARCHAR" property="approvestate" />
    <result column="businessLicense" jdbcType="VARCHAR" property="businesslicense" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updateTime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CompanyMessageId, dis_id, name, money, serviceContext, feature, region, promise, 
    linkman, tel, address, approveState, businessLicense, userId, createTime, updateTime
  </sql>
  <select id="selectByExample" parameterType="com.hlbrc.movingcompany.entity.CompanyMessageExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from companymessage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from companymessage
    where CompanyMessageId = #{companymessageid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from companymessage
    where CompanyMessageId = #{companymessageid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hlbrc.movingcompany.entity.CompanyMessageExample">
    delete from companymessage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hlbrc.movingcompany.entity.CompanyMessage">
    insert into companymessage (CompanyMessageId, dis_id, name, 
      money, serviceContext, feature, 
      region, promise, linkman, 
      tel, address, approveState, 
      businessLicense, userId, createTime, 
      updateTime)
    values (#{companymessageid,jdbcType=INTEGER}, #{disId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{money,jdbcType=DOUBLE}, #{servicecontext,jdbcType=VARCHAR}, #{feature,jdbcType=VARCHAR}, 
      #{region,jdbcType=VARCHAR}, #{promise,jdbcType=VARCHAR}, #{linkman,jdbcType=VARCHAR}, 
      #{tel,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{approvestate,jdbcType=VARCHAR}, 
      #{businesslicense,jdbcType=VARCHAR}, #{userid,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.hlbrc.movingcompany.entity.CompanyMessage">
    insert into companymessage
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companymessageid != null">
        CompanyMessageId,
      </if>
      <if test="disId != null">
        dis_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="servicecontext != null">
        serviceContext,
      </if>
      <if test="feature != null">
        feature,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="promise != null">
        promise,
      </if>
      <if test="linkman != null">
        linkman,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="approvestate != null">
        approveState,
      </if>
      <if test="businesslicense != null">
        businessLicense,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="updatetime != null">
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companymessageid != null">
        #{companymessageid,jdbcType=INTEGER},
      </if>
      <if test="disId != null">
        #{disId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="servicecontext != null">
        #{servicecontext,jdbcType=VARCHAR},
      </if>
      <if test="feature != null">
        #{feature,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="promise != null">
        #{promise,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="approvestate != null">
        #{approvestate,jdbcType=VARCHAR},
      </if>
      <if test="businesslicense != null">
        #{businesslicense,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hlbrc.movingcompany.entity.CompanyMessageExample" resultType="java.lang.Long">
    select count(*) from companymessage
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update companymessage
    <set>
      <if test="record.companymessageid != null">
        CompanyMessageId = #{record.companymessageid,jdbcType=INTEGER},
      </if>
      <if test="record.disId != null">
        dis_id = #{record.disId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.servicecontext != null">
        serviceContext = #{record.servicecontext,jdbcType=VARCHAR},
      </if>
      <if test="record.feature != null">
        feature = #{record.feature,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null">
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.promise != null">
        promise = #{record.promise,jdbcType=VARCHAR},
      </if>
      <if test="record.linkman != null">
        linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.approvestate != null">
        approveState = #{record.approvestate,jdbcType=VARCHAR},
      </if>
      <if test="record.businesslicense != null">
        businessLicense = #{record.businesslicense,jdbcType=VARCHAR},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatetime != null">
        updateTime = #{record.updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update companymessage
    set CompanyMessageId = #{record.companymessageid,jdbcType=INTEGER},
      dis_id = #{record.disId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      serviceContext = #{record.servicecontext,jdbcType=VARCHAR},
      feature = #{record.feature,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      promise = #{record.promise,jdbcType=VARCHAR},
      linkman = #{record.linkman,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      approveState = #{record.approvestate,jdbcType=VARCHAR},
      businessLicense = #{record.businesslicense,jdbcType=VARCHAR},
      userId = #{record.userid,jdbcType=INTEGER},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      updateTime = #{record.updatetime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hlbrc.movingcompany.entity.CompanyMessage">
    update companymessage
    <set>
      <if test="disId != null">
        dis_id = #{disId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="servicecontext != null">
        serviceContext = #{servicecontext,jdbcType=VARCHAR},
      </if>
      <if test="feature != null">
        feature = #{feature,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="promise != null">
        promise = #{promise,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null">
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="approvestate != null">
        approveState = #{approvestate,jdbcType=VARCHAR},
      </if>
      <if test="businesslicense != null">
        businessLicense = #{businesslicense,jdbcType=VARCHAR},
      </if>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updateTime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where CompanyMessageId = #{companymessageid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hlbrc.movingcompany.entity.CompanyMessage">
    update companymessage
    set dis_id = #{disId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      serviceContext = #{servicecontext,jdbcType=VARCHAR},
      feature = #{feature,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      promise = #{promise,jdbcType=VARCHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      approveState = #{approvestate,jdbcType=VARCHAR},
      businessLicense = #{businesslicense,jdbcType=VARCHAR},
      userId = #{userid,jdbcType=INTEGER},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      updateTime = #{updatetime,jdbcType=TIMESTAMP}
    where CompanyMessageId = #{companymessageid,jdbcType=INTEGER}
  </update>
</mapper>