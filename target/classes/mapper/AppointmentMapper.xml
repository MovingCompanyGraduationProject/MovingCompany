<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hlbrc.movingcompany.mapper.IAppointmentMapper">
  <resultMap id="BaseResultMap" type="com.hlbrc.movingcompany.entity.Appointment">
    <id column="appointmentId" jdbcType="INTEGER" property="appointmentid" />
    <result column="userId" jdbcType="INTEGER" property="userid" />
    <result column="startSite" jdbcType="VARCHAR" property="startsite" />
    <result column="endSite" jdbcType="VARCHAR" property="endsite" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="tel" jdbcType="VARCHAR" property="tel" />
    <result column="serviceTypeId" jdbcType="INTEGER" property="servicetypeid" />
    <result column="movingTime" jdbcType="TIMESTAMP" property="movingtime" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    appointmentId, userId, startSite, endSite, name, tel, serviceTypeId, movingTime, 
    createTime
  </sql>
  <select id="selectByExample" parameterType="com.hlbrc.movingcompany.entity.AppointmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from appointment
    where appointmentId = #{appointmentid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from appointment
    where appointmentId = #{appointmentid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hlbrc.movingcompany.entity.AppointmentExample">
    delete from appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hlbrc.movingcompany.entity.Appointment">
    insert into appointment (appointmentId, userId, startSite, 
      endSite, name, tel, 
      serviceTypeId, movingTime, createTime
      )
    values (#{appointmentid,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{startsite,jdbcType=VARCHAR}, 
      #{endsite,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{tel,jdbcType=VARCHAR}, 
      #{servicetypeid,jdbcType=INTEGER}, #{movingtime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hlbrc.movingcompany.entity.Appointment">
    insert into appointment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="appointmentid != null">
        appointmentId,
      </if>
      <if test="userid != null">
        userId,
      </if>
      <if test="startsite != null">
        startSite,
      </if>
      <if test="endsite != null">
        endSite,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="tel != null">
        tel,
      </if>
      <if test="servicetypeid != null">
        serviceTypeId,
      </if>
      <if test="movingtime != null">
        movingTime,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="appointmentid != null">
        #{appointmentid,jdbcType=INTEGER},
      </if>
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="startsite != null">
        #{startsite,jdbcType=VARCHAR},
      </if>
      <if test="endsite != null">
        #{endsite,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        #{tel,jdbcType=VARCHAR},
      </if>
      <if test="servicetypeid != null">
        #{servicetypeid,jdbcType=INTEGER},
      </if>
      <if test="movingtime != null">
        #{movingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hlbrc.movingcompany.entity.AppointmentExample" resultType="java.lang.Long">
    select count(*) from appointment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update appointment
    <set>
      <if test="record.appointmentid != null">
        appointmentId = #{record.appointmentid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.startsite != null">
        startSite = #{record.startsite,jdbcType=VARCHAR},
      </if>
      <if test="record.endsite != null">
        endSite = #{record.endsite,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tel != null">
        tel = #{record.tel,jdbcType=VARCHAR},
      </if>
      <if test="record.servicetypeid != null">
        serviceTypeId = #{record.servicetypeid,jdbcType=INTEGER},
      </if>
      <if test="record.movingtime != null">
        movingTime = #{record.movingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update appointment
    set appointmentId = #{record.appointmentid,jdbcType=INTEGER},
      userId = #{record.userid,jdbcType=INTEGER},
      startSite = #{record.startsite,jdbcType=VARCHAR},
      endSite = #{record.endsite,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      tel = #{record.tel,jdbcType=VARCHAR},
      serviceTypeId = #{record.servicetypeid,jdbcType=INTEGER},
      movingTime = #{record.movingtime,jdbcType=TIMESTAMP},
      createTime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hlbrc.movingcompany.entity.Appointment">
    update appointment
    <set>
      <if test="userid != null">
        userId = #{userid,jdbcType=INTEGER},
      </if>
      <if test="startsite != null">
        startSite = #{startsite,jdbcType=VARCHAR},
      </if>
      <if test="endsite != null">
        endSite = #{endsite,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tel != null">
        tel = #{tel,jdbcType=VARCHAR},
      </if>
      <if test="servicetypeid != null">
        serviceTypeId = #{servicetypeid,jdbcType=INTEGER},
      </if>
      <if test="movingtime != null">
        movingTime = #{movingtime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where appointmentId = #{appointmentid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hlbrc.movingcompany.entity.Appointment">
    update appointment
    set userId = #{userid,jdbcType=INTEGER},
      startSite = #{startsite,jdbcType=VARCHAR},
      endSite = #{endsite,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      tel = #{tel,jdbcType=VARCHAR},
      serviceTypeId = #{servicetypeid,jdbcType=INTEGER},
      movingTime = #{movingtime,jdbcType=TIMESTAMP},
      createTime = #{createtime,jdbcType=TIMESTAMP}
    where appointmentId = #{appointmentid,jdbcType=INTEGER}
  </update>
</mapper>